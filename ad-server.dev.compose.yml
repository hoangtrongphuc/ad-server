version: '3' 
networks:
 kong-net:
  driver: bridge
services: 
  mongo:
    container_name: mongodb
    image: mongo
    restart: always
    volumes:
      - ./data:/data/db
    networks: 
      - kong-net
  redis:
    container_name: redis
    image: redis:4.0.5-alpine
    command: ["redis-server", "--appendonly", "yes"]
    networks:
      - kong-net
    volumes:
      - ./redis-data:/data

  ad-selector-service:
    container_name: ad-selector-service
    build: ./ad-selector-service
    image: ad-selector-service
    restart: on-failure
    depends_on:
      - mongo
      - redis
    env_file:
      - ./ad-selector-service/.env
    volumes: 
      - ./ad-selector-service/src:/opt/app
    networks: 
      - kong-net
    ports:
      - "3004:3000" 

  creative-service:
    container_name: creative-service
    build: ./creative-service
    image: creative-service
    restart: on-failure
    depends_on:
      - mongo
    env_file:
      - ./creative-service/.env
    volumes: 
      - ./creative-service/src:/opt/app
    networks: 
      - kong-net
    ports:
      - "3001:3000"  

  campaign-service:
    container_name: campaign-service
    build: ./campaign-service
    image: campaign-service
    restart: on-failure
    depends_on:
      - mongo
      - creative-service
    env_file:
      - ./campaign-service/.env
    volumes: 
      - ./campaign-service/src:/opt/app
    networks: 
      - kong-net
    ports:
      - "3002:3000" 

  zone-service:
    container_name: zone-service
    build: ./zone-service
    image: zone-service
    restart: on-failure
    depends_on:
      - mongo
      - campaign-service
    env_file:
      - ./zone-service/.env
    volumes: 
      - ./zone-service/src:/opt/app
    networks: 
      - kong-net
    ports:
      - "3003:3000" 

